// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // TaskContacts
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class TaskContactMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaskContact>
    {
        public TaskContactMapping()
            : this("dbo")
        {
        }

        public TaskContactMapping(string schema)
        {
            ToTable("TaskContacts", schema);
            HasKey(x => new { x.TaskId, x.ContactId });

            Property(x => x.TaskId).HasColumnName(@"TaskId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ContactId).HasColumnName(@"ContactId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PictureUrl).HasColumnName(@"PictureURL").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Participation).HasColumnName(@"Participation").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Support).HasColumnName(@"Support").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.X).HasColumnName(@"X").HasColumnType("int").IsRequired();
            Property(x => x.Y).HasColumnName(@"Y").HasColumnType("int").IsRequired();
            Property(x => x.Width).HasColumnName(@"Width").HasColumnType("int").IsRequired();
            Property(x => x.Height).HasColumnName(@"Height").HasColumnType("int").IsRequired();
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            // Foreign keys
            HasRequired(a => a.Contact).WithMany(b => b.TaskContacts).HasForeignKey(c => c.ContactId); // FK_dbo.TaskContacts_dbo.Contacts_ContactId
            HasRequired(a => a.Task).WithMany(b => b.TaskContacts).HasForeignKey(c => c.TaskId); // FK_dbo.TaskContacts_dbo.Tasks_TaskId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
