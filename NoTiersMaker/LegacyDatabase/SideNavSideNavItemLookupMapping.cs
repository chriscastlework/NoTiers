// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // SideNavSideNavItemLookups
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class SideNavSideNavItemLookupMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SideNavSideNavItemLookup>
    {
        public SideNavSideNavItemLookupMapping()
            : this("dbo")
        {
        }

        public SideNavSideNavItemLookupMapping(string schema)
        {
            ToTable("SideNavSideNavItemLookups", schema);
            HasKey(x => new { x.SideNavId, x.SideNavItemId });

            Property(x => x.SideNavId).HasColumnName(@"SideNavId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SideNavItemId).HasColumnName(@"SideNavItemId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Order).HasColumnName(@"Order").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.SideNav).WithMany(b => b.SideNavSideNavItemLookups).HasForeignKey(c => c.SideNavId); // FK_dbo.SideNavSideNavItemLookups_dbo.SideNavs_SideNavId
            HasRequired(a => a.SideNavItem).WithMany(b => b.SideNavSideNavItemLookups).HasForeignKey(c => c.SideNavItemId); // FK_dbo.SideNavSideNavItemLookups_dbo.SideNavItems_SideNavItemId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
