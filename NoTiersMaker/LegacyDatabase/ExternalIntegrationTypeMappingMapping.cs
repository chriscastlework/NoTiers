// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // ExternalIntegrationTypeMappings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class ExternalIntegrationTypeMappingMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExternalIntegrationTypeMapping>
    {
        public ExternalIntegrationTypeMappingMapping()
            : this("dbo")
        {
        }

        public ExternalIntegrationTypeMappingMapping(string schema)
        {
            ToTable("ExternalIntegrationTypeMappings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EntityType).HasColumnName(@"EntityType").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ExternalIntegrationId).HasColumnName(@"ExternalIntegrationId").HasColumnType("int").IsRequired();
            Property(x => x.CustomObjectKey).HasColumnName(@"CustomObjectKey").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.AssociatedType).HasColumnName(@"AssociatedType").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DirectionalSyncEnabled).HasColumnName(@"DirectionalSyncEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.DirectionalSyncUpEnabled).HasColumnName(@"DirectionalSyncUpEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.DirectionalSyncDownEnabled).HasColumnName(@"DirectionalSyncDownEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.DailyBulkSyncEnabled).HasColumnName(@"DailyBulkSyncEnabled").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.ExternalIntegration).WithMany(b => b.ExternalIntegrationTypeMappings).HasForeignKey(c => c.ExternalIntegrationId); // FK_dbo.ExternalIntegrationTypeMappings_dbo.ExternalIntegrations_ExternalIntegrationId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
