// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // CustomFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class CustomField
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name
        public int FieldType { get; set; } // FieldType
        public string ValdiationRegex { get; set; } // ValdiationRegex
        public int OrganisationId { get; set; } // OrganisationId
        public int EntityType { get; set; } // EntityType
        public string IconClass { get; set; } // IconClass
        public string Color { get; set; } // Color
        public long? CustomObjectRowId { get; set; } // CustomObjectRow_Id
        public long? CustomObjectId { get; set; } // CustomObject_Id
        public bool IsNotVisible { get; set; } // IsNotVisible
        public int? CustomFieldGroupId { get; set; } // CustomFieldGroupId
        public int DisplayOrder { get; set; } // DisplayOrder
        public int? CustomFieldValidationId { get; set; } // CustomFieldValidation_Id
        public bool Required { get; set; } // Required
        public int? Min { get; set; } // Min
        public int? Max { get; set; } // Max
        public System.DateTime? MinDate { get; set; } // MinDate
        public System.DateTime? MaxDate { get; set; } // MaxDate

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<CustomFieldOption> CustomFieldOptions { get; set; } // CustomFieldOptions.FK_dbo.CustomFieldOptions_dbo.CustomFields_CustomFieldId
        public virtual System.Collections.Generic.ICollection<CustomFieldValue> CustomFieldValues { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<CustomObjectFilterField> CustomObjectFilterFields { get; set; } // CustomObjectFilterFields.FK_dbo.CustomObjectFilterFields_dbo.CustomFields_CustomFieldId
        public virtual System.Collections.Generic.ICollection<CustomObjectRowField> CustomObjectRowFields { get; set; } // CustomObjectRowFields.FK_dbo.CustomTableRowFields_dbo.CustomFields_Field_Id

        // Foreign keys
        public virtual CustomFieldGroup CustomFieldGroup { get; set; } // FK_dbo.CustomFields_dbo.CustomFieldGroups_CustomFieldGroupId
        public virtual CustomFieldValidation CustomFieldValidation { get; set; } // FK_dbo.CustomFields_dbo.CustomFieldValidations_CustomFieldValidation_Id
        public virtual CustomObject CustomObject { get; set; } // FK_dbo.CustomFields_dbo.CustomTables_CustomTable_Id
        public virtual CustomObjectRow CustomObjectRow { get; set; } // FK_dbo.CustomFields_dbo.CustomTableRows_CustomTableRow_Id
        public virtual Organisation Organisation { get; set; } // FK_dbo.CustomFields_dbo.Organisations_OrganisationId

        public CustomField()
        {
            EntityType = 0;
            IsNotVisible = false;
            DisplayOrder = 0;
            Required = false;
            Min = 0;
            CustomFieldOptions = new System.Collections.Generic.List<CustomFieldOption>();
            CustomFieldValues = new System.Collections.Generic.List<CustomFieldValue>();
            CustomObjectFilterFields = new System.Collections.Generic.List<CustomObjectFilterField>();
            CustomObjectRowFields = new System.Collections.Generic.List<CustomObjectRowField>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
