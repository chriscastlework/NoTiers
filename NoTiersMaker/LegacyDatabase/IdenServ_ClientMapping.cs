// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // Clients
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class IdenServ_ClientMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IdenServ_Client>
    {
        public IdenServ_ClientMapping()
            : this("IdenServ")
        {
        }

        public IdenServ_ClientMapping(string schema)
        {
            ToTable("Clients", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            Property(x => x.ClientId).HasColumnName(@"ClientId").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.ClientName).HasColumnName(@"ClientName").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.ClientUri).HasColumnName(@"ClientUri").HasColumnType("nvarchar").IsOptional().HasMaxLength(2000);
            Property(x => x.LogoUri).HasColumnName(@"LogoUri").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.RequireConsent).HasColumnName(@"RequireConsent").HasColumnType("bit").IsRequired();
            Property(x => x.AllowRememberConsent).HasColumnName(@"AllowRememberConsent").HasColumnType("bit").IsRequired();
            Property(x => x.Flow).HasColumnName(@"Flow").HasColumnType("int").IsRequired();
            Property(x => x.AllowClientCredentialsOnly).HasColumnName(@"AllowClientCredentialsOnly").HasColumnType("bit").IsRequired();
            Property(x => x.LogoutUri).HasColumnName(@"LogoutUri").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.LogoutSessionRequired).HasColumnName(@"LogoutSessionRequired").HasColumnType("bit").IsRequired();
            Property(x => x.RequireSignOutPrompt).HasColumnName(@"RequireSignOutPrompt").HasColumnType("bit").IsRequired();
            Property(x => x.AllowAccessToAllScopes).HasColumnName(@"AllowAccessToAllScopes").HasColumnType("bit").IsRequired();
            Property(x => x.IdentityTokenLifetime).HasColumnName(@"IdentityTokenLifetime").HasColumnType("int").IsRequired();
            Property(x => x.AccessTokenLifetime).HasColumnName(@"AccessTokenLifetime").HasColumnType("int").IsRequired();
            Property(x => x.AuthorizationCodeLifetime).HasColumnName(@"AuthorizationCodeLifetime").HasColumnType("int").IsRequired();
            Property(x => x.AbsoluteRefreshTokenLifetime).HasColumnName(@"AbsoluteRefreshTokenLifetime").HasColumnType("int").IsRequired();
            Property(x => x.SlidingRefreshTokenLifetime).HasColumnName(@"SlidingRefreshTokenLifetime").HasColumnType("int").IsRequired();
            Property(x => x.RefreshTokenUsage).HasColumnName(@"RefreshTokenUsage").HasColumnType("int").IsRequired();
            Property(x => x.UpdateAccessTokenOnRefresh).HasColumnName(@"UpdateAccessTokenOnRefresh").HasColumnType("bit").IsRequired();
            Property(x => x.RefreshTokenExpiration).HasColumnName(@"RefreshTokenExpiration").HasColumnType("int").IsRequired();
            Property(x => x.AccessTokenType).HasColumnName(@"AccessTokenType").HasColumnType("int").IsRequired();
            Property(x => x.EnableLocalLogin).HasColumnName(@"EnableLocalLogin").HasColumnType("bit").IsRequired();
            Property(x => x.IncludeJwtId).HasColumnName(@"IncludeJwtId").HasColumnType("bit").IsRequired();
            Property(x => x.AlwaysSendClientClaims).HasColumnName(@"AlwaysSendClientClaims").HasColumnType("bit").IsRequired();
            Property(x => x.PrefixClientClaims).HasColumnName(@"PrefixClientClaims").HasColumnType("bit").IsRequired();
            Property(x => x.AllowAccessToAllGrantTypes).HasColumnName(@"AllowAccessToAllGrantTypes").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
