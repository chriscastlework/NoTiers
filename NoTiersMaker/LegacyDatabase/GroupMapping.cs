// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // Groups
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class GroupMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Group>
    {
        public GroupMapping()
            : this("dbo")
        {
        }

        public GroupMapping(string schema)
        {
            ToTable("Groups", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.OrgId).HasColumnName(@"OrgId").HasColumnType("int").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime2").IsOptional();
            HasMany(t => t.Users).WithMany(t => t.Groups).Map(m =>
            {
                m.ToTable("GroupUsers", "dbo");
                m.MapLeftKey("Group_Id");
                m.MapRightKey("User_Id");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
