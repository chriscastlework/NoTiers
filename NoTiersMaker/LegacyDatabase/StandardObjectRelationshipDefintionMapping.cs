// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // StandardObjectRelationshipDefintions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class StandardObjectRelationshipDefintionMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StandardObjectRelationshipDefintion>
    {
        public StandardObjectRelationshipDefintionMapping()
            : this("dbo")
        {
        }

        public StandardObjectRelationshipDefintionMapping(string schema)
        {
            ToTable("StandardObjectRelationshipDefintions", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Relationship).HasColumnName(@"Relationship").HasColumnType("int").IsRequired();
            Property(x => x.CustomObjectId).HasColumnName(@"CustomObject_Id").HasColumnType("bigint").IsOptional();
            Property(x => x.StandardObjectType).HasColumnName(@"StandardObjectType").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.StandardObjectId).HasColumnName(@"StandardObjectId").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.OnDelete).HasColumnName(@"OnDelete").HasColumnType("int").IsRequired();
            Property(x => x.OrganisationId).HasColumnName(@"Organisation_Id").HasColumnType("int").IsOptional();
            Property(x => x.ContactId).HasColumnName(@"Contact_Id").HasColumnType("int").IsOptional();
            Property(x => x.DealId).HasColumnName(@"Deal_Id").HasColumnType("int").IsOptional();
            Property(x => x.TaskId).HasColumnName(@"Task_Id").HasColumnType("int").IsOptional();
            Property(x => x.AccountId).HasColumnName(@"Account_Id").HasColumnType("int").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Key).HasColumnName(@"Key").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DependencySideLabel).HasColumnName(@"DependencySideLabel").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PrincipleSideLabel).HasColumnName(@"PrincipleSideLabel").HasColumnType("nvarchar(max)").IsOptional();

            // Foreign keys
            HasOptional(a => a.Account).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.AccountId).WillCascadeOnDelete(false); // FK_dbo.StandardTableRelationshipDefintions_dbo.Accounts_Account_Id
            HasOptional(a => a.Contact).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.ContactId).WillCascadeOnDelete(false); // FK_dbo.StandardTableRelationshipDefintions_dbo.Contacts_Contact_Id
            HasOptional(a => a.CustomObject).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.CustomObjectId).WillCascadeOnDelete(false); // FK_dbo.TableRelationships_dbo.CustomTables_CustomTable_Id
            HasOptional(a => a.Deal).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.DealId).WillCascadeOnDelete(false); // FK_dbo.StandardTableRelationshipDefintions_dbo.Deals_Deal_Id
            HasOptional(a => a.Organisation).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.OrganisationId).WillCascadeOnDelete(false); // FK_dbo.StandardTableRelationshipDefintions_dbo.Organisations_Organisation_Id
            HasOptional(a => a.Task).WithMany(b => b.StandardObjectRelationshipDefintions).HasForeignKey(c => c.TaskId).WillCascadeOnDelete(false); // FK_dbo.StandardTableRelationshipDefintions_dbo.Tasks_Task_Id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
