// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // ExternalIntegrationTypeMappings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class ExternalIntegrationTypeMapping
    {
        public int Id { get; set; } // Id (Primary key)
        public string EntityType { get; set; } // EntityType
        public int ExternalIntegrationId { get; set; } // ExternalIntegrationId
        public string CustomObjectKey { get; set; } // CustomObjectKey
        public string AssociatedType { get; set; } // AssociatedType
        public bool DirectionalSyncEnabled { get; set; } // DirectionalSyncEnabled
        public bool DirectionalSyncUpEnabled { get; set; } // DirectionalSyncUpEnabled
        public bool DirectionalSyncDownEnabled { get; set; } // DirectionalSyncDownEnabled
        public bool? DailyBulkSyncEnabled { get; set; } // DailyBulkSyncEnabled

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<ExternalIntegrationFieldMapping> ExternalIntegrationFieldMappings { get; set; } // ExternalIntegrationFieldMappings.FK_dbo.ExternalIntegrationFieldMappings_dbo.ExternalIntegrationTypeMappings_ExternalIntegrationTypeMappingId

        // Foreign keys
        public virtual ExternalIntegration ExternalIntegration { get; set; } // FK_dbo.ExternalIntegrationTypeMappings_dbo.ExternalIntegrations_ExternalIntegrationId

        public ExternalIntegrationTypeMapping()
        {
            DirectionalSyncEnabled = false;
            DirectionalSyncUpEnabled = false;
            DirectionalSyncDownEnabled = false;
            ExternalIntegrationFieldMappings = new System.Collections.Generic.List<ExternalIntegrationFieldMapping>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
