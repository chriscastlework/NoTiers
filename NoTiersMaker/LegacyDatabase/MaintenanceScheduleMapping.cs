// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // MaintenanceSchedules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class MaintenanceScheduleMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MaintenanceSchedule>
    {
        public MaintenanceScheduleMapping()
            : this("dbo")
        {
        }

        public MaintenanceScheduleMapping(string schema)
        {
            ToTable("MaintenanceSchedules", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Reason).HasColumnName(@"Reason").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Start).HasColumnName(@"Start").HasColumnType("datetime2").IsOptional();
            Property(x => x.ExpectedFinish).HasColumnName(@"ExpectedFinish").HasColumnType("datetime2").IsOptional();
            Property(x => x.ActualFinish).HasColumnName(@"ActualFinish").HasColumnType("datetime2").IsOptional();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
            Property(x => x.NotifyFrom).HasColumnName(@"NotifyFrom").HasColumnType("datetime2").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
