// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class VelocityRocketLegacyContext : System.Data.Entity.DbContext, IVelocityRocketLegacyContext
    {
        public System.Data.Entity.DbSet<Account> Accounts { get; set; } // Accounts
        public System.Data.Entity.DbSet<AccountShare> AccountShares { get; set; } // AccountShares
        public System.Data.Entity.DbSet<AcheivedAward> AcheivedAwards { get; set; } // AcheivedAwards
        public System.Data.Entity.DbSet<AddOn> AddOns { get; set; } // AddOns
        public System.Data.Entity.DbSet<AddOnClaim> AddOnClaims { get; set; } // AddOnClaims
        public System.Data.Entity.DbSet<AddOnClaimValue> AddOnClaimValues { get; set; } // AddOnClaimValues
        public System.Data.Entity.DbSet<AddOnCost> AddOnCosts { get; set; } // AddOnCosts
        public System.Data.Entity.DbSet<ApiAuthentication> ApiAuthentications { get; set; } // ApiAuthentications
        public System.Data.Entity.DbSet<ApiConnector> ApiConnectors { get; set; } // ApiConnectors
        public System.Data.Entity.DbSet<ApiKey> ApiKeys { get; set; } // ApiKeys
        public System.Data.Entity.DbSet<ApiTypeImportQueueItem> ApiTypeImportQueueItems { get; set; } // ApiTypeImportQueueItems
        public System.Data.Entity.DbSet<Attachment> Attachments { get; set; } // Attachments
        public System.Data.Entity.DbSet<Award> Awards { get; set; } // Awards
        public System.Data.Entity.DbSet<BuyingProcess> BuyingProcesses { get; set; } // BuyingProcesses
        public System.Data.Entity.DbSet<BuyingProcessStage> BuyingProcessStages { get; set; } // BuyingProcessStages
        public System.Data.Entity.DbSet<CmsContent> CmsContents { get; set; } // cmsContent
        public System.Data.Entity.DbSet<CmsContentType> CmsContentTypes { get; set; } // cmsContentType
        public System.Data.Entity.DbSet<CmsContentTypeAllowedContentType> CmsContentTypeAllowedContentTypes { get; set; } // cmsContentTypeAllowedContentType
        public System.Data.Entity.DbSet<CmsContentVersion> CmsContentVersions { get; set; } // cmsContentVersion
        public System.Data.Entity.DbSet<CmsContentXml> CmsContentXmls { get; set; } // cmsContentXml
        public System.Data.Entity.DbSet<CmsDataType> CmsDataTypes { get; set; } // cmsDataType
        public System.Data.Entity.DbSet<CmsDataTypePreValue> CmsDataTypePreValues { get; set; } // cmsDataTypePreValues
        public System.Data.Entity.DbSet<CmsDictionary> CmsDictionaries { get; set; } // cmsDictionary
        public System.Data.Entity.DbSet<CmsDocument> CmsDocuments { get; set; } // cmsDocument
        public System.Data.Entity.DbSet<CmsDocumentType> CmsDocumentTypes { get; set; } // cmsDocumentType
        public System.Data.Entity.DbSet<CmsLanguageText> CmsLanguageTexts { get; set; } // cmsLanguageText
        public System.Data.Entity.DbSet<CmsMacro> CmsMacroes { get; set; } // cmsMacro
        public System.Data.Entity.DbSet<CmsMacroProperty> CmsMacroProperties { get; set; } // cmsMacroProperty
        public System.Data.Entity.DbSet<CmsMember> CmsMembers { get; set; } // cmsMember
        public System.Data.Entity.DbSet<CmsMemberType> CmsMemberTypes { get; set; } // cmsMemberType
        public System.Data.Entity.DbSet<CmsPreviewXml> CmsPreviewXmls { get; set; } // cmsPreviewXml
        public System.Data.Entity.DbSet<CmsPropertyData> CmsPropertyDatas { get; set; } // cmsPropertyData
        public System.Data.Entity.DbSet<CmsPropertyType> CmsPropertyTypes { get; set; } // cmsPropertyType
        public System.Data.Entity.DbSet<CmsPropertyTypeGroup> CmsPropertyTypeGroups { get; set; } // cmsPropertyTypeGroup
        public System.Data.Entity.DbSet<CmsTag> CmsTags { get; set; } // cmsTags
        public System.Data.Entity.DbSet<CmsTagRelationship> CmsTagRelationships { get; set; } // cmsTagRelationship
        public System.Data.Entity.DbSet<CmsTask> CmsTasks { get; set; } // cmsTask
        public System.Data.Entity.DbSet<CmsTaskType> CmsTaskTypes { get; set; } // cmsTaskType
        public System.Data.Entity.DbSet<CmsTemplate> CmsTemplates { get; set; } // cmsTemplate
        public System.Data.Entity.DbSet<Coaching_AdminConnectorLog> Coaching_AdminConnectorLogs { get; set; } // Admin_ConnectorLog
        public System.Data.Entity.DbSet<Coaching_AdminEventLog> Coaching_AdminEventLogs { get; set; } // Admin_EventLog
        public System.Data.Entity.DbSet<Coaching_Asset> Coaching_Assets { get; set; } // Assets
        public System.Data.Entity.DbSet<Coaching_AssetTag> Coaching_AssetTags { get; set; } // AssetTags
        public System.Data.Entity.DbSet<Coaching_AssetType> Coaching_AssetTypes { get; set; } // AssetTypes
        public System.Data.Entity.DbSet<Coaching_Broadcaster> Coaching_Broadcasters { get; set; } // Broadcasters
        public System.Data.Entity.DbSet<Coaching_Channel> Coaching_Channels { get; set; } // Channels
        public System.Data.Entity.DbSet<Coaching_CoachingUser> Coaching_CoachingUsers { get; set; } // CoachingUser
        public System.Data.Entity.DbSet<Coaching_Program> Coaching_Programs { get; set; } // Programs
        public System.Data.Entity.DbSet<Coaching_ProgramAsset> Coaching_ProgramAssets { get; set; } // ProgramAssets
        public System.Data.Entity.DbSet<Coaching_StaTheme> Coaching_StaThemes { get; set; } // StaThemes
        public System.Data.Entity.DbSet<Coaching_Tag> Coaching_Tags { get; set; } // Tags
        public System.Data.Entity.DbSet<Coaching_Theme> Coaching_Themes { get; set; } // Themes
        public System.Data.Entity.DbSet<Coaching_UserFavorite> Coaching_UserFavorites { get; set; } // UserFavorites
        public System.Data.Entity.DbSet<Coaching_UserFolder> Coaching_UserFolders { get; set; } // UserFolders
        public System.Data.Entity.DbSet<Coaching_UserRating> Coaching_UserRatings { get; set; } // UserRatings
        public System.Data.Entity.DbSet<Coaching_UserShare> Coaching_UserShares { get; set; } // UserShares
        public System.Data.Entity.DbSet<Coaching_UserView> Coaching_UserViews { get; set; } // UserViews
        public System.Data.Entity.DbSet<ColumnPreference> ColumnPreferences { get; set; } // ColumnPreferences
        public System.Data.Entity.DbSet<Comment> Comments { get; set; } // Comments
        public System.Data.Entity.DbSet<Contact> Contacts { get; set; } // Contacts
        public System.Data.Entity.DbSet<ContactShare> ContactShares { get; set; } // ContactShares
        public System.Data.Entity.DbSet<CountryList> CountryLists { get; set; } // CountryLists
        public System.Data.Entity.DbSet<Currency> Currencies { get; set; } // Currencies
        public System.Data.Entity.DbSet<CurrencyAmount> CurrencyAmounts { get; set; } // CurrencyAmounts
        public System.Data.Entity.DbSet<CustomField> CustomFields { get; set; } // CustomFields
        public System.Data.Entity.DbSet<CustomFieldGroup> CustomFieldGroups { get; set; } // CustomFieldGroups
        public System.Data.Entity.DbSet<CustomFieldOption> CustomFieldOptions { get; set; } // CustomFieldOptions
        public System.Data.Entity.DbSet<CustomFieldTypeGroup> CustomFieldTypeGroups { get; set; } // CustomFieldTypeGroup
        public System.Data.Entity.DbSet<CustomFieldValidation> CustomFieldValidations { get; set; } // CustomFieldValidations
        public System.Data.Entity.DbSet<CustomFieldValue> CustomFieldValues { get; set; } // CustomFieldValues
        public System.Data.Entity.DbSet<CustomLinksAndButton> CustomLinksAndButtons { get; set; } // CustomLinksAndButtons
        public System.Data.Entity.DbSet<CustomLinksApiType> CustomLinksApiTypes { get; set; } // CustomLinksApiTypes
        public System.Data.Entity.DbSet<CustomLinksButtonPlacement> CustomLinksButtonPlacements { get; set; } // CustomLinksButtonPlacements
        public System.Data.Entity.DbSet<CustomLinksUrl> CustomLinksUrls { get; set; } // CustomLinksUrls
        public System.Data.Entity.DbSet<CustomObject> CustomObjects { get; set; } // CustomObjects
        public System.Data.Entity.DbSet<CustomObjectFilter> CustomObjectFilters { get; set; } // CustomObjectFilters
        public System.Data.Entity.DbSet<CustomObjectFilterField> CustomObjectFilterFields { get; set; } // CustomObjectFilterFields
        public System.Data.Entity.DbSet<CustomObjectRow> CustomObjectRows { get; set; } // CustomObjectRows
        public System.Data.Entity.DbSet<CustomObjectRowField> CustomObjectRowFields { get; set; } // CustomObjectRowFields
        public System.Data.Entity.DbSet<Deal> Deals { get; set; } // Deals
        public System.Data.Entity.DbSet<DealContact> DealContacts { get; set; } // DealContacts
        public System.Data.Entity.DbSet<DealContactRole> DealContactRoles { get; set; } // DealContactRoles
        public System.Data.Entity.DbSet<DealOrgChart> DealOrgCharts { get; set; } // DealOrgCharts
        public System.Data.Entity.DbSet<DealShare> DealShares { get; set; } // DealShares
        public System.Data.Entity.DbSet<DealStageHistory> DealStageHistories { get; set; } // DealStageHistories
        public System.Data.Entity.DbSet<DealStep> DealSteps { get; set; } // DealSteps
        public System.Data.Entity.DbSet<DefaultAddOnInEdition1> DefaultAddOnInEdition1 { get; set; } // DefaultAddOnInEditions
        public System.Data.Entity.DbSet<Edition> Editions { get; set; } // Editions
        public System.Data.Entity.DbSet<EditionCost> EditionCosts { get; set; } // EditionCosts
        public System.Data.Entity.DbSet<EmailConfiguration> EmailConfigurations { get; set; } // EmailConfiguration
        public System.Data.Entity.DbSet<EmailNotification> EmailNotifications { get; set; } // EmailNotifications
        public System.Data.Entity.DbSet<EmailTemplate> EmailTemplates { get; set; } // EmailTemplates
        public System.Data.Entity.DbSet<EmailTemplateConfiguration> EmailTemplateConfigurations { get; set; } // EmailTemplateConfiguration
        public System.Data.Entity.DbSet<ExchangeRate> ExchangeRates { get; set; } // ExchangeRates
        public System.Data.Entity.DbSet<ExternalIntegration> ExternalIntegrations { get; set; } // ExternalIntegrations
        public System.Data.Entity.DbSet<ExternalIntegrationFieldMapping> ExternalIntegrationFieldMappings { get; set; } // ExternalIntegrationFieldMappings
        public System.Data.Entity.DbSet<ExternalIntegrationTypeMapping> ExternalIntegrationTypeMappings { get; set; } // ExternalIntegrationTypeMappings
        public System.Data.Entity.DbSet<Feature> Features { get; set; } // Features
        public System.Data.Entity.DbSet<FeatureClaim> FeatureClaims { get; set; } // FeatureClaims
        public System.Data.Entity.DbSet<Group> Groups { get; set; } // Groups
        public System.Data.Entity.DbSet<IdenServ_Client> IdenServ_Clients { get; set; } // Clients
        public System.Data.Entity.DbSet<IdenServ_ClientClaim> IdenServ_ClientClaims { get; set; } // ClientClaims
        public System.Data.Entity.DbSet<IdenServ_ClientCorsOrigin> IdenServ_ClientCorsOrigins { get; set; } // ClientCorsOrigins
        public System.Data.Entity.DbSet<IdenServ_ClientCustomGrantType> IdenServ_ClientCustomGrantTypes { get; set; } // ClientCustomGrantTypes
        public System.Data.Entity.DbSet<IdenServ_ClientIdPRestriction> IdenServ_ClientIdPRestrictions { get; set; } // ClientIdPRestrictions
        public System.Data.Entity.DbSet<IdenServ_ClientPostLogoutRedirectUri> IdenServ_ClientPostLogoutRedirectUris { get; set; } // ClientPostLogoutRedirectUris
        public System.Data.Entity.DbSet<IdenServ_ClientRedirectUri> IdenServ_ClientRedirectUris { get; set; } // ClientRedirectUris
        public System.Data.Entity.DbSet<IdenServ_ClientScope> IdenServ_ClientScopes { get; set; } // ClientScopes
        public System.Data.Entity.DbSet<IdenServ_ClientSecret> IdenServ_ClientSecrets { get; set; } // ClientSecrets
        public System.Data.Entity.DbSet<IdenServ_Consent> IdenServ_Consents { get; set; } // Consents
        public System.Data.Entity.DbSet<IdenServ_Scope> IdenServ_Scopes { get; set; } // Scopes
        public System.Data.Entity.DbSet<IdenServ_ScopeClaim> IdenServ_ScopeClaims { get; set; } // ScopeClaims
        public System.Data.Entity.DbSet<IdenServ_ScopeSecret> IdenServ_ScopeSecrets { get; set; } // ScopeSecrets
        public System.Data.Entity.DbSet<IdenServ_Token> IdenServ_Tokens { get; set; } // Tokens
        public System.Data.Entity.DbSet<ImportedData> ImportedDatas { get; set; } // ImportedDatas
        public System.Data.Entity.DbSet<IntegrationPackage> IntegrationPackages { get; set; } // IntegrationPackages
        public System.Data.Entity.DbSet<Invite> Invites { get; set; } // Invites
        public System.Data.Entity.DbSet<ItemStep> ItemSteps { get; set; } // ItemSteps
        public System.Data.Entity.DbSet<LeadConversion> LeadConversions { get; set; } // LeadConversions
        public System.Data.Entity.DbSet<LeadStatu> LeadStatus { get; set; } // LeadStatus
        public System.Data.Entity.DbSet<Localization> Localizations { get; set; } // Localizations
        public System.Data.Entity.DbSet<LogoImage> LogoImages { get; set; } // LogoImages
        public System.Data.Entity.DbSet<MaintenanceSchedule> MaintenanceSchedules { get; set; } // MaintenanceSchedules
        public System.Data.Entity.DbSet<MeetingVisualiserChartItem> MeetingVisualiserChartItems { get; set; } // MeetingVisualiserChartItems
        public System.Data.Entity.DbSet<Notification> Notifications { get; set; } // Notifications
        public System.Data.Entity.DbSet<NotificationField> NotificationFields { get; set; } // NotificationFields
        public System.Data.Entity.DbSet<OAuth2Token> OAuth2Token { get; set; } // OAuth2Token
        public System.Data.Entity.DbSet<Organisation> Organisations { get; set; } // Organisations
        public System.Data.Entity.DbSet<OrganisationAllowedRole> OrganisationAllowedRoles { get; set; } // OrganisationAllowedRoles
        public System.Data.Entity.DbSet<OrganisationSalesObjectView> OrganisationSalesObjectViews { get; set; } // OrganisationSalesObjectViews
        public System.Data.Entity.DbSet<OrgEmailNotificiationPreference> OrgEmailNotificiationPreferences { get; set; } // OrgEmailNotificiationPreferences
        public System.Data.Entity.DbSet<PackageItem> PackageItems { get; set; } // PackageItems
        public System.Data.Entity.DbSet<PasswordResetRequest> PasswordResetRequests { get; set; } // PasswordResetRequests
        public System.Data.Entity.DbSet<PickList> PickLists { get; set; } // PickLists
        public System.Data.Entity.DbSet<PickListOption> PickListOptions { get; set; } // PickListOptions
        public System.Data.Entity.DbSet<ReminderTask> ReminderTasks { get; set; } // ReminderTasks
        public System.Data.Entity.DbSet<Role> Roles { get; set; } // Roles
        public System.Data.Entity.DbSet<RoleClaim> RoleClaims { get; set; } // RoleClaims
        public System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        public System.Data.Entity.DbSet<SalesObjectView> SalesObjectViews { get; set; } // SalesObjectViews
        public System.Data.Entity.DbSet<SalesObjectViewArchive> SalesObjectViewArchives { get; set; } // SalesObjectViewArchives
        public System.Data.Entity.DbSet<SalesObjectViewArchiveItem> SalesObjectViewArchiveItems { get; set; } // SalesObjectViewArchiveItems
        public System.Data.Entity.DbSet<SalesProcess> SalesProcesses { get; set; } // SalesProcesses
        public System.Data.Entity.DbSet<SalesTrainingCompany> SalesTrainingCompanies { get; set; } // SalesTrainingCompanies
        public System.Data.Entity.DbSet<Search> Searches { get; set; } // Searches
        public System.Data.Entity.DbSet<Section> Sections { get; set; } // Sections
        public System.Data.Entity.DbSet<SectionCustomLink> SectionCustomLinks { get; set; } // SectionCustomLinks
        public System.Data.Entity.DbSet<SideNav> SideNavs { get; set; } // SideNavs
        public System.Data.Entity.DbSet<SideNavItem> SideNavItems { get; set; } // SideNavItems
        public System.Data.Entity.DbSet<SideNavSideNavItemLookup> SideNavSideNavItemLookups { get; set; } // SideNavSideNavItemLookups
        public System.Data.Entity.DbSet<Stage> Stages { get; set; } // Stages
        public System.Data.Entity.DbSet<StandardObjectDefinition> StandardObjectDefinitions { get; set; } // StandardObjectDefinitions
        public System.Data.Entity.DbSet<StandardObjectRelationshipDefintion> StandardObjectRelationshipDefintions { get; set; } // StandardObjectRelationshipDefintions
        public System.Data.Entity.DbSet<StandardRelationship> StandardRelationships { get; set; } // StandardRelationships
        public System.Data.Entity.DbSet<Statement> Statements { get; set; } // Statements
        public System.Data.Entity.DbSet<StcOrg> StcOrgs { get; set; } // StcOrgs
        public System.Data.Entity.DbSet<StcTheme> StcThemes { get; set; } // StcThemes
        public System.Data.Entity.DbSet<Step> Steps { get; set; } // Steps
        public System.Data.Entity.DbSet<StepActionFile> StepActionFiles { get; set; } // StepActionFiles
        public System.Data.Entity.DbSet<StepDocument> StepDocuments { get; set; } // StepDocuments
        public System.Data.Entity.DbSet<Subscription> Subscriptions { get; set; } // Subscriptions
        public System.Data.Entity.DbSet<SubscriptionAddOn> SubscriptionAddOns { get; set; } // SubscriptionAddOns
        public System.Data.Entity.DbSet<SystemPreference> SystemPreferences { get; set; } // SystemPreferences
        public System.Data.Entity.DbSet<TableHeader> TableHeaders { get; set; } // TableHeaders
        public System.Data.Entity.DbSet<TablePreference> TablePreferences { get; set; } // TablePreferences
        public System.Data.Entity.DbSet<Task> Tasks { get; set; } // Tasks
        public System.Data.Entity.DbSet<TaskContact> TaskContacts { get; set; } // TaskContacts
        public System.Data.Entity.DbSet<TaskShare> TaskShares { get; set; } // TaskShares
        public System.Data.Entity.DbSet<TaskType> TaskTypes { get; set; } // TaskTypes
        public System.Data.Entity.DbSet<TempNotification> TempNotifications { get; set; } // tempNotifications
        public System.Data.Entity.DbSet<TempNotificationField> TempNotificationFields { get; set; } // tempNotificationFields
        public System.Data.Entity.DbSet<UmbracoAccess> UmbracoAccesses { get; set; } // umbracoAccess
        public System.Data.Entity.DbSet<UmbracoAccessRule> UmbracoAccessRules { get; set; } // umbracoAccessRule
        public System.Data.Entity.DbSet<UmbracoCacheInstruction> UmbracoCacheInstructions { get; set; } // umbracoCacheInstruction
        public System.Data.Entity.DbSet<UmbracoDomain> UmbracoDomains { get; set; } // umbracoDomains
        public System.Data.Entity.DbSet<UmbracoExternalLogin> UmbracoExternalLogins { get; set; } // umbracoExternalLogin
        public System.Data.Entity.DbSet<UmbracoLanguage> UmbracoLanguages { get; set; } // umbracoLanguage
        public System.Data.Entity.DbSet<UmbracoLock> UmbracoLocks { get; set; } // umbracoLock
        public System.Data.Entity.DbSet<UmbracoLog> UmbracoLogs { get; set; } // umbracoLog
        public System.Data.Entity.DbSet<UmbracoMigration> UmbracoMigrations { get; set; } // umbracoMigration
        public System.Data.Entity.DbSet<UmbracoNode> UmbracoNodes { get; set; } // umbracoNode
        public System.Data.Entity.DbSet<UmbracoRedirectUrl> UmbracoRedirectUrls { get; set; } // umbracoRedirectUrl
        public System.Data.Entity.DbSet<UmbracoRelation> UmbracoRelations { get; set; } // umbracoRelation
        public System.Data.Entity.DbSet<UmbracoRelationType> UmbracoRelationTypes { get; set; } // umbracoRelationType
        public System.Data.Entity.DbSet<UmbracoServer> UmbracoServers { get; set; } // umbracoServer
        public System.Data.Entity.DbSet<UmbracoUser> UmbracoUsers { get; set; } // umbracoUser
        public System.Data.Entity.DbSet<UmbracoUser2App> UmbracoUser2App { get; set; } // umbracoUser2app
        public System.Data.Entity.DbSet<UmbracoUser2NodeNotify> UmbracoUser2NodeNotify { get; set; } // umbracoUser2NodeNotify
        public System.Data.Entity.DbSet<UmbracoUser2NodePermission> UmbracoUser2NodePermission { get; set; } // umbracoUser2NodePermission
        public System.Data.Entity.DbSet<UmbracoUserType> UmbracoUserTypes { get; set; } // umbracoUserType
        public System.Data.Entity.DbSet<UsageAction> UsageActions { get; set; } // UsageActions
        public System.Data.Entity.DbSet<UsageLevel> UsageLevels { get; set; } // UsageLevels
        public System.Data.Entity.DbSet<UsageRecord> UsageRecords { get; set; } // UsageRecords
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users
        public System.Data.Entity.DbSet<UserClaim> UserClaims { get; set; } // UserClaims
        public System.Data.Entity.DbSet<UserEmailNotificationPreference> UserEmailNotificationPreferences { get; set; } // UserEmailNotificationPreferences
        public System.Data.Entity.DbSet<UserLogin> UserLogins { get; set; } // UserLogins
        public System.Data.Entity.DbSet<UserProfile> UserProfiles { get; set; } // UserProfiles
        public System.Data.Entity.DbSet<UserRole> UserRoles { get; set; } // UserRoles
        public System.Data.Entity.DbSet<UserTarget> UserTargets { get; set; } // UserTargets
        public System.Data.Entity.DbSet<ViewRecord> ViewRecords { get; set; } // ViewRecords
        public System.Data.Entity.DbSet<WatchNotificationEmail> WatchNotificationEmails { get; set; } // WatchNotificationEmails

        static VelocityRocketLegacyContext()
        {
            System.Data.Entity.Database.SetInitializer<VelocityRocketLegacyContext>(null);
            VelocityRocketLegacyContextStaticPartial(); // Create the following method in your partial class: private static void VelocityRocketLegacyContextStaticPartial() { }
        }

        public VelocityRocketLegacyContext()
            : base("Name=VelocityRocketConnectionString")
        {
            InitializePartial();
        }

        public VelocityRocketLegacyContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public VelocityRocketLegacyContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public VelocityRocketLegacyContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public VelocityRocketLegacyContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AccountMapping());
            modelBuilder.Configurations.Add(new AccountShareMapping());
            modelBuilder.Configurations.Add(new AcheivedAwardMapping());
            modelBuilder.Configurations.Add(new AddOnMapping());
            modelBuilder.Configurations.Add(new AddOnClaimMapping());
            modelBuilder.Configurations.Add(new AddOnClaimValueMapping());
            modelBuilder.Configurations.Add(new AddOnCostMapping());
            modelBuilder.Configurations.Add(new ApiAuthenticationMapping());
            modelBuilder.Configurations.Add(new ApiConnectorMapping());
            modelBuilder.Configurations.Add(new ApiKeyMapping());
            modelBuilder.Configurations.Add(new ApiTypeImportQueueItemMapping());
            modelBuilder.Configurations.Add(new AttachmentMapping());
            modelBuilder.Configurations.Add(new AwardMapping());
            modelBuilder.Configurations.Add(new BuyingProcessMapping());
            modelBuilder.Configurations.Add(new BuyingProcessStageMapping());
            modelBuilder.Configurations.Add(new CmsContentMapping());
            modelBuilder.Configurations.Add(new CmsContentTypeMapping());
            modelBuilder.Configurations.Add(new CmsContentTypeAllowedContentTypeMapping());
            modelBuilder.Configurations.Add(new CmsContentVersionMapping());
            modelBuilder.Configurations.Add(new CmsContentXmlMapping());
            modelBuilder.Configurations.Add(new CmsDataTypeMapping());
            modelBuilder.Configurations.Add(new CmsDataTypePreValueMapping());
            modelBuilder.Configurations.Add(new CmsDictionaryMapping());
            modelBuilder.Configurations.Add(new CmsDocumentMapping());
            modelBuilder.Configurations.Add(new CmsDocumentTypeMapping());
            modelBuilder.Configurations.Add(new CmsLanguageTextMapping());
            modelBuilder.Configurations.Add(new CmsMacroMapping());
            modelBuilder.Configurations.Add(new CmsMacroPropertyMapping());
            modelBuilder.Configurations.Add(new CmsMemberMapping());
            modelBuilder.Configurations.Add(new CmsMemberTypeMapping());
            modelBuilder.Configurations.Add(new CmsPreviewXmlMapping());
            modelBuilder.Configurations.Add(new CmsPropertyDataMapping());
            modelBuilder.Configurations.Add(new CmsPropertyTypeMapping());
            modelBuilder.Configurations.Add(new CmsPropertyTypeGroupMapping());
            modelBuilder.Configurations.Add(new CmsTagMapping());
            modelBuilder.Configurations.Add(new CmsTagRelationshipMapping());
            modelBuilder.Configurations.Add(new CmsTaskMapping());
            modelBuilder.Configurations.Add(new CmsTaskTypeMapping());
            modelBuilder.Configurations.Add(new CmsTemplateMapping());
            modelBuilder.Configurations.Add(new Coaching_AdminConnectorLogMapping());
            modelBuilder.Configurations.Add(new Coaching_AdminEventLogMapping());
            modelBuilder.Configurations.Add(new Coaching_AssetMapping());
            modelBuilder.Configurations.Add(new Coaching_AssetTagMapping());
            modelBuilder.Configurations.Add(new Coaching_AssetTypeMapping());
            modelBuilder.Configurations.Add(new Coaching_BroadcasterMapping());
            modelBuilder.Configurations.Add(new Coaching_ChannelMapping());
            modelBuilder.Configurations.Add(new Coaching_CoachingUserMapping());
            modelBuilder.Configurations.Add(new Coaching_ProgramMapping());
            modelBuilder.Configurations.Add(new Coaching_ProgramAssetMapping());
            modelBuilder.Configurations.Add(new Coaching_StaThemeMapping());
            modelBuilder.Configurations.Add(new Coaching_TagMapping());
            modelBuilder.Configurations.Add(new Coaching_ThemeMapping());
            modelBuilder.Configurations.Add(new Coaching_UserFavoriteMapping());
            modelBuilder.Configurations.Add(new Coaching_UserFolderMapping());
            modelBuilder.Configurations.Add(new Coaching_UserRatingMapping());
            modelBuilder.Configurations.Add(new Coaching_UserShareMapping());
            modelBuilder.Configurations.Add(new Coaching_UserViewMapping());
            modelBuilder.Configurations.Add(new ColumnPreferenceMapping());
            modelBuilder.Configurations.Add(new CommentMapping());
            modelBuilder.Configurations.Add(new ContactMapping());
            modelBuilder.Configurations.Add(new ContactShareMapping());
            modelBuilder.Configurations.Add(new CountryListMapping());
            modelBuilder.Configurations.Add(new CurrencyMapping());
            modelBuilder.Configurations.Add(new CurrencyAmountMapping());
            modelBuilder.Configurations.Add(new CustomFieldMapping());
            modelBuilder.Configurations.Add(new CustomFieldGroupMapping());
            modelBuilder.Configurations.Add(new CustomFieldOptionMapping());
            modelBuilder.Configurations.Add(new CustomFieldTypeGroupMapping());
            modelBuilder.Configurations.Add(new CustomFieldValidationMapping());
            modelBuilder.Configurations.Add(new CustomFieldValueMapping());
            modelBuilder.Configurations.Add(new CustomLinksAndButtonMapping());
            modelBuilder.Configurations.Add(new CustomLinksApiTypeMapping());
            modelBuilder.Configurations.Add(new CustomLinksButtonPlacementMapping());
            modelBuilder.Configurations.Add(new CustomLinksUrlMapping());
            modelBuilder.Configurations.Add(new CustomObjectMapping());
            modelBuilder.Configurations.Add(new CustomObjectFilterMapping());
            modelBuilder.Configurations.Add(new CustomObjectFilterFieldMapping());
            modelBuilder.Configurations.Add(new CustomObjectRowMapping());
            modelBuilder.Configurations.Add(new CustomObjectRowFieldMapping());
            modelBuilder.Configurations.Add(new DealMapping());
            modelBuilder.Configurations.Add(new DealContactMapping());
            modelBuilder.Configurations.Add(new DealContactRoleMapping());
            modelBuilder.Configurations.Add(new DealOrgChartMapping());
            modelBuilder.Configurations.Add(new DealShareMapping());
            modelBuilder.Configurations.Add(new DealStageHistoryMapping());
            modelBuilder.Configurations.Add(new DealStepMapping());
            modelBuilder.Configurations.Add(new DefaultAddOnInEdition1Mapping());
            modelBuilder.Configurations.Add(new EditionMapping());
            modelBuilder.Configurations.Add(new EditionCostMapping());
            modelBuilder.Configurations.Add(new EmailConfigurationMapping());
            modelBuilder.Configurations.Add(new EmailNotificationMapping());
            modelBuilder.Configurations.Add(new EmailTemplateMapping());
            modelBuilder.Configurations.Add(new EmailTemplateConfigurationMapping());
            modelBuilder.Configurations.Add(new ExchangeRateMapping());
            modelBuilder.Configurations.Add(new ExternalIntegrationMapping());
            modelBuilder.Configurations.Add(new ExternalIntegrationFieldMappingMapping());
            modelBuilder.Configurations.Add(new ExternalIntegrationTypeMappingMapping());
            modelBuilder.Configurations.Add(new FeatureMapping());
            modelBuilder.Configurations.Add(new FeatureClaimMapping());
            modelBuilder.Configurations.Add(new GroupMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientClaimMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientCorsOriginMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientCustomGrantTypeMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientIdPRestrictionMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientPostLogoutRedirectUriMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientRedirectUriMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientScopeMapping());
            modelBuilder.Configurations.Add(new IdenServ_ClientSecretMapping());
            modelBuilder.Configurations.Add(new IdenServ_ConsentMapping());
            modelBuilder.Configurations.Add(new IdenServ_ScopeMapping());
            modelBuilder.Configurations.Add(new IdenServ_ScopeClaimMapping());
            modelBuilder.Configurations.Add(new IdenServ_ScopeSecretMapping());
            modelBuilder.Configurations.Add(new IdenServ_TokenMapping());
            modelBuilder.Configurations.Add(new ImportedDataMapping());
            modelBuilder.Configurations.Add(new IntegrationPackageMapping());
            modelBuilder.Configurations.Add(new InviteMapping());
            modelBuilder.Configurations.Add(new ItemStepMapping());
            modelBuilder.Configurations.Add(new LeadConversionMapping());
            modelBuilder.Configurations.Add(new LeadStatuMapping());
            modelBuilder.Configurations.Add(new LocalizationMapping());
            modelBuilder.Configurations.Add(new LogoImageMapping());
            modelBuilder.Configurations.Add(new MaintenanceScheduleMapping());
            modelBuilder.Configurations.Add(new MeetingVisualiserChartItemMapping());
            modelBuilder.Configurations.Add(new NotificationMapping());
            modelBuilder.Configurations.Add(new NotificationFieldMapping());
            modelBuilder.Configurations.Add(new OAuth2TokenMapping());
            modelBuilder.Configurations.Add(new OrganisationMapping());
            modelBuilder.Configurations.Add(new OrganisationAllowedRoleMapping());
            modelBuilder.Configurations.Add(new OrganisationSalesObjectViewMapping());
            modelBuilder.Configurations.Add(new OrgEmailNotificiationPreferenceMapping());
            modelBuilder.Configurations.Add(new PackageItemMapping());
            modelBuilder.Configurations.Add(new PasswordResetRequestMapping());
            modelBuilder.Configurations.Add(new PickListMapping());
            modelBuilder.Configurations.Add(new PickListOptionMapping());
            modelBuilder.Configurations.Add(new ReminderTaskMapping());
            modelBuilder.Configurations.Add(new RoleMapping());
            modelBuilder.Configurations.Add(new RoleClaimMapping());
            modelBuilder.Configurations.Add(new RuleMapping());
            modelBuilder.Configurations.Add(new SalesObjectViewMapping());
            modelBuilder.Configurations.Add(new SalesObjectViewArchiveMapping());
            modelBuilder.Configurations.Add(new SalesObjectViewArchiveItemMapping());
            modelBuilder.Configurations.Add(new SalesProcessMapping());
            modelBuilder.Configurations.Add(new SalesTrainingCompanyMapping());
            modelBuilder.Configurations.Add(new SearchMapping());
            modelBuilder.Configurations.Add(new SectionMapping());
            modelBuilder.Configurations.Add(new SectionCustomLinkMapping());
            modelBuilder.Configurations.Add(new SideNavMapping());
            modelBuilder.Configurations.Add(new SideNavItemMapping());
            modelBuilder.Configurations.Add(new SideNavSideNavItemLookupMapping());
            modelBuilder.Configurations.Add(new StageMapping());
            modelBuilder.Configurations.Add(new StandardObjectDefinitionMapping());
            modelBuilder.Configurations.Add(new StandardObjectRelationshipDefintionMapping());
            modelBuilder.Configurations.Add(new StandardRelationshipMapping());
            modelBuilder.Configurations.Add(new StatementMapping());
            modelBuilder.Configurations.Add(new StcOrgMapping());
            modelBuilder.Configurations.Add(new StcThemeMapping());
            modelBuilder.Configurations.Add(new StepMapping());
            modelBuilder.Configurations.Add(new StepActionFileMapping());
            modelBuilder.Configurations.Add(new StepDocumentMapping());
            modelBuilder.Configurations.Add(new SubscriptionMapping());
            modelBuilder.Configurations.Add(new SubscriptionAddOnMapping());
            modelBuilder.Configurations.Add(new SystemPreferenceMapping());
            modelBuilder.Configurations.Add(new TableHeaderMapping());
            modelBuilder.Configurations.Add(new TablePreferenceMapping());
            modelBuilder.Configurations.Add(new TaskMapping());
            modelBuilder.Configurations.Add(new TaskContactMapping());
            modelBuilder.Configurations.Add(new TaskShareMapping());
            modelBuilder.Configurations.Add(new TaskTypeMapping());
            modelBuilder.Configurations.Add(new TempNotificationMapping());
            modelBuilder.Configurations.Add(new TempNotificationFieldMapping());
            modelBuilder.Configurations.Add(new UmbracoAccessMapping());
            modelBuilder.Configurations.Add(new UmbracoAccessRuleMapping());
            modelBuilder.Configurations.Add(new UmbracoCacheInstructionMapping());
            modelBuilder.Configurations.Add(new UmbracoDomainMapping());
            modelBuilder.Configurations.Add(new UmbracoExternalLoginMapping());
            modelBuilder.Configurations.Add(new UmbracoLanguageMapping());
            modelBuilder.Configurations.Add(new UmbracoLockMapping());
            modelBuilder.Configurations.Add(new UmbracoLogMapping());
            modelBuilder.Configurations.Add(new UmbracoMigrationMapping());
            modelBuilder.Configurations.Add(new UmbracoNodeMapping());
            modelBuilder.Configurations.Add(new UmbracoRedirectUrlMapping());
            modelBuilder.Configurations.Add(new UmbracoRelationMapping());
            modelBuilder.Configurations.Add(new UmbracoRelationTypeMapping());
            modelBuilder.Configurations.Add(new UmbracoServerMapping());
            modelBuilder.Configurations.Add(new UmbracoUserMapping());
            modelBuilder.Configurations.Add(new UmbracoUser2AppMapping());
            modelBuilder.Configurations.Add(new UmbracoUser2NodeNotifyMapping());
            modelBuilder.Configurations.Add(new UmbracoUser2NodePermissionMapping());
            modelBuilder.Configurations.Add(new UmbracoUserTypeMapping());
            modelBuilder.Configurations.Add(new UsageActionMapping());
            modelBuilder.Configurations.Add(new UsageLevelMapping());
            modelBuilder.Configurations.Add(new UsageRecordMapping());
            modelBuilder.Configurations.Add(new UserMapping());
            modelBuilder.Configurations.Add(new UserClaimMapping());
            modelBuilder.Configurations.Add(new UserEmailNotificationPreferenceMapping());
            modelBuilder.Configurations.Add(new UserLoginMapping());
            modelBuilder.Configurations.Add(new UserProfileMapping());
            modelBuilder.Configurations.Add(new UserRoleMapping());
            modelBuilder.Configurations.Add(new UserTargetMapping());
            modelBuilder.Configurations.Add(new ViewRecordMapping());
            modelBuilder.Configurations.Add(new WatchNotificationEmailMapping());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AccountMapping(schema));
            modelBuilder.Configurations.Add(new AccountShareMapping(schema));
            modelBuilder.Configurations.Add(new AcheivedAwardMapping(schema));
            modelBuilder.Configurations.Add(new AddOnMapping(schema));
            modelBuilder.Configurations.Add(new AddOnClaimMapping(schema));
            modelBuilder.Configurations.Add(new AddOnClaimValueMapping(schema));
            modelBuilder.Configurations.Add(new AddOnCostMapping(schema));
            modelBuilder.Configurations.Add(new ApiAuthenticationMapping(schema));
            modelBuilder.Configurations.Add(new ApiConnectorMapping(schema));
            modelBuilder.Configurations.Add(new ApiKeyMapping(schema));
            modelBuilder.Configurations.Add(new ApiTypeImportQueueItemMapping(schema));
            modelBuilder.Configurations.Add(new AttachmentMapping(schema));
            modelBuilder.Configurations.Add(new AwardMapping(schema));
            modelBuilder.Configurations.Add(new BuyingProcessMapping(schema));
            modelBuilder.Configurations.Add(new BuyingProcessStageMapping(schema));
            modelBuilder.Configurations.Add(new CmsContentMapping(schema));
            modelBuilder.Configurations.Add(new CmsContentTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsContentTypeAllowedContentTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsContentVersionMapping(schema));
            modelBuilder.Configurations.Add(new CmsContentXmlMapping(schema));
            modelBuilder.Configurations.Add(new CmsDataTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsDataTypePreValueMapping(schema));
            modelBuilder.Configurations.Add(new CmsDictionaryMapping(schema));
            modelBuilder.Configurations.Add(new CmsDocumentMapping(schema));
            modelBuilder.Configurations.Add(new CmsDocumentTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsLanguageTextMapping(schema));
            modelBuilder.Configurations.Add(new CmsMacroMapping(schema));
            modelBuilder.Configurations.Add(new CmsMacroPropertyMapping(schema));
            modelBuilder.Configurations.Add(new CmsMemberMapping(schema));
            modelBuilder.Configurations.Add(new CmsMemberTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsPreviewXmlMapping(schema));
            modelBuilder.Configurations.Add(new CmsPropertyDataMapping(schema));
            modelBuilder.Configurations.Add(new CmsPropertyTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsPropertyTypeGroupMapping(schema));
            modelBuilder.Configurations.Add(new CmsTagMapping(schema));
            modelBuilder.Configurations.Add(new CmsTagRelationshipMapping(schema));
            modelBuilder.Configurations.Add(new CmsTaskMapping(schema));
            modelBuilder.Configurations.Add(new CmsTaskTypeMapping(schema));
            modelBuilder.Configurations.Add(new CmsTemplateMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_AdminConnectorLogMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_AdminEventLogMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_AssetMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_AssetTagMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_AssetTypeMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_BroadcasterMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_ChannelMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_CoachingUserMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_ProgramMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_ProgramAssetMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_StaThemeMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_TagMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_ThemeMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_UserFavoriteMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_UserFolderMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_UserRatingMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_UserShareMapping(schema));
            modelBuilder.Configurations.Add(new Coaching_UserViewMapping(schema));
            modelBuilder.Configurations.Add(new ColumnPreferenceMapping(schema));
            modelBuilder.Configurations.Add(new CommentMapping(schema));
            modelBuilder.Configurations.Add(new ContactMapping(schema));
            modelBuilder.Configurations.Add(new ContactShareMapping(schema));
            modelBuilder.Configurations.Add(new CountryListMapping(schema));
            modelBuilder.Configurations.Add(new CurrencyMapping(schema));
            modelBuilder.Configurations.Add(new CurrencyAmountMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldGroupMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldOptionMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldTypeGroupMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldValidationMapping(schema));
            modelBuilder.Configurations.Add(new CustomFieldValueMapping(schema));
            modelBuilder.Configurations.Add(new CustomLinksAndButtonMapping(schema));
            modelBuilder.Configurations.Add(new CustomLinksApiTypeMapping(schema));
            modelBuilder.Configurations.Add(new CustomLinksButtonPlacementMapping(schema));
            modelBuilder.Configurations.Add(new CustomLinksUrlMapping(schema));
            modelBuilder.Configurations.Add(new CustomObjectMapping(schema));
            modelBuilder.Configurations.Add(new CustomObjectFilterMapping(schema));
            modelBuilder.Configurations.Add(new CustomObjectFilterFieldMapping(schema));
            modelBuilder.Configurations.Add(new CustomObjectRowMapping(schema));
            modelBuilder.Configurations.Add(new CustomObjectRowFieldMapping(schema));
            modelBuilder.Configurations.Add(new DealMapping(schema));
            modelBuilder.Configurations.Add(new DealContactMapping(schema));
            modelBuilder.Configurations.Add(new DealContactRoleMapping(schema));
            modelBuilder.Configurations.Add(new DealOrgChartMapping(schema));
            modelBuilder.Configurations.Add(new DealShareMapping(schema));
            modelBuilder.Configurations.Add(new DealStageHistoryMapping(schema));
            modelBuilder.Configurations.Add(new DealStepMapping(schema));
            modelBuilder.Configurations.Add(new DefaultAddOnInEdition1Mapping(schema));
            modelBuilder.Configurations.Add(new EditionMapping(schema));
            modelBuilder.Configurations.Add(new EditionCostMapping(schema));
            modelBuilder.Configurations.Add(new EmailConfigurationMapping(schema));
            modelBuilder.Configurations.Add(new EmailNotificationMapping(schema));
            modelBuilder.Configurations.Add(new EmailTemplateMapping(schema));
            modelBuilder.Configurations.Add(new EmailTemplateConfigurationMapping(schema));
            modelBuilder.Configurations.Add(new ExchangeRateMapping(schema));
            modelBuilder.Configurations.Add(new ExternalIntegrationMapping(schema));
            modelBuilder.Configurations.Add(new ExternalIntegrationFieldMappingMapping(schema));
            modelBuilder.Configurations.Add(new ExternalIntegrationTypeMappingMapping(schema));
            modelBuilder.Configurations.Add(new FeatureMapping(schema));
            modelBuilder.Configurations.Add(new FeatureClaimMapping(schema));
            modelBuilder.Configurations.Add(new GroupMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientClaimMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientCorsOriginMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientCustomGrantTypeMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientIdPRestrictionMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientPostLogoutRedirectUriMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientRedirectUriMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientScopeMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ClientSecretMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ConsentMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ScopeMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ScopeClaimMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_ScopeSecretMapping(schema));
            modelBuilder.Configurations.Add(new IdenServ_TokenMapping(schema));
            modelBuilder.Configurations.Add(new ImportedDataMapping(schema));
            modelBuilder.Configurations.Add(new IntegrationPackageMapping(schema));
            modelBuilder.Configurations.Add(new InviteMapping(schema));
            modelBuilder.Configurations.Add(new ItemStepMapping(schema));
            modelBuilder.Configurations.Add(new LeadConversionMapping(schema));
            modelBuilder.Configurations.Add(new LeadStatuMapping(schema));
            modelBuilder.Configurations.Add(new LocalizationMapping(schema));
            modelBuilder.Configurations.Add(new LogoImageMapping(schema));
            modelBuilder.Configurations.Add(new MaintenanceScheduleMapping(schema));
            modelBuilder.Configurations.Add(new MeetingVisualiserChartItemMapping(schema));
            modelBuilder.Configurations.Add(new NotificationMapping(schema));
            modelBuilder.Configurations.Add(new NotificationFieldMapping(schema));
            modelBuilder.Configurations.Add(new OAuth2TokenMapping(schema));
            modelBuilder.Configurations.Add(new OrganisationMapping(schema));
            modelBuilder.Configurations.Add(new OrganisationAllowedRoleMapping(schema));
            modelBuilder.Configurations.Add(new OrganisationSalesObjectViewMapping(schema));
            modelBuilder.Configurations.Add(new OrgEmailNotificiationPreferenceMapping(schema));
            modelBuilder.Configurations.Add(new PackageItemMapping(schema));
            modelBuilder.Configurations.Add(new PasswordResetRequestMapping(schema));
            modelBuilder.Configurations.Add(new PickListMapping(schema));
            modelBuilder.Configurations.Add(new PickListOptionMapping(schema));
            modelBuilder.Configurations.Add(new ReminderTaskMapping(schema));
            modelBuilder.Configurations.Add(new RoleMapping(schema));
            modelBuilder.Configurations.Add(new RoleClaimMapping(schema));
            modelBuilder.Configurations.Add(new RuleMapping(schema));
            modelBuilder.Configurations.Add(new SalesObjectViewMapping(schema));
            modelBuilder.Configurations.Add(new SalesObjectViewArchiveMapping(schema));
            modelBuilder.Configurations.Add(new SalesObjectViewArchiveItemMapping(schema));
            modelBuilder.Configurations.Add(new SalesProcessMapping(schema));
            modelBuilder.Configurations.Add(new SalesTrainingCompanyMapping(schema));
            modelBuilder.Configurations.Add(new SearchMapping(schema));
            modelBuilder.Configurations.Add(new SectionMapping(schema));
            modelBuilder.Configurations.Add(new SectionCustomLinkMapping(schema));
            modelBuilder.Configurations.Add(new SideNavMapping(schema));
            modelBuilder.Configurations.Add(new SideNavItemMapping(schema));
            modelBuilder.Configurations.Add(new SideNavSideNavItemLookupMapping(schema));
            modelBuilder.Configurations.Add(new StageMapping(schema));
            modelBuilder.Configurations.Add(new StandardObjectDefinitionMapping(schema));
            modelBuilder.Configurations.Add(new StandardObjectRelationshipDefintionMapping(schema));
            modelBuilder.Configurations.Add(new StandardRelationshipMapping(schema));
            modelBuilder.Configurations.Add(new StatementMapping(schema));
            modelBuilder.Configurations.Add(new StcOrgMapping(schema));
            modelBuilder.Configurations.Add(new StcThemeMapping(schema));
            modelBuilder.Configurations.Add(new StepMapping(schema));
            modelBuilder.Configurations.Add(new StepActionFileMapping(schema));
            modelBuilder.Configurations.Add(new StepDocumentMapping(schema));
            modelBuilder.Configurations.Add(new SubscriptionMapping(schema));
            modelBuilder.Configurations.Add(new SubscriptionAddOnMapping(schema));
            modelBuilder.Configurations.Add(new SystemPreferenceMapping(schema));
            modelBuilder.Configurations.Add(new TableHeaderMapping(schema));
            modelBuilder.Configurations.Add(new TablePreferenceMapping(schema));
            modelBuilder.Configurations.Add(new TaskMapping(schema));
            modelBuilder.Configurations.Add(new TaskContactMapping(schema));
            modelBuilder.Configurations.Add(new TaskShareMapping(schema));
            modelBuilder.Configurations.Add(new TaskTypeMapping(schema));
            modelBuilder.Configurations.Add(new TempNotificationMapping(schema));
            modelBuilder.Configurations.Add(new TempNotificationFieldMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoAccessMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoAccessRuleMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoCacheInstructionMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoDomainMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoExternalLoginMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoLanguageMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoLockMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoLogMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoMigrationMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoNodeMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoRedirectUrlMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoRelationMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoRelationTypeMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoServerMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoUserMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoUser2AppMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoUser2NodeNotifyMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoUser2NodePermissionMapping(schema));
            modelBuilder.Configurations.Add(new UmbracoUserTypeMapping(schema));
            modelBuilder.Configurations.Add(new UsageActionMapping(schema));
            modelBuilder.Configurations.Add(new UsageLevelMapping(schema));
            modelBuilder.Configurations.Add(new UsageRecordMapping(schema));
            modelBuilder.Configurations.Add(new UserMapping(schema));
            modelBuilder.Configurations.Add(new UserClaimMapping(schema));
            modelBuilder.Configurations.Add(new UserEmailNotificationPreferenceMapping(schema));
            modelBuilder.Configurations.Add(new UserLoginMapping(schema));
            modelBuilder.Configurations.Add(new UserProfileMapping(schema));
            modelBuilder.Configurations.Add(new UserRoleMapping(schema));
            modelBuilder.Configurations.Add(new UserTargetMapping(schema));
            modelBuilder.Configurations.Add(new ViewRecordMapping(schema));
            modelBuilder.Configurations.Add(new WatchNotificationEmailMapping(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);

        // Stored Procedures
        public int SpCloneSalesProcesses(System.Data.DataTable idList)
        {
            var idListParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@IdList", SqlDbType = System.Data.SqlDbType.Structured, Direction = System.Data.ParameterDirection.Input, Value = idList, TypeName = "dbo.SalesProcessIdList" };
            if (idListParam.Value == null)
                idListParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[sp_CloneSalesProcesses] @IdList", idListParam, procResultParam);

            return (int) procResultParam.Value;
        }

    }
}
// </auto-generated>
