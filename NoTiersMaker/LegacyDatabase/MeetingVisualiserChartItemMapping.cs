// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // MeetingVisualiserChartItems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class MeetingVisualiserChartItemMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MeetingVisualiserChartItem>
    {
        public MeetingVisualiserChartItemMapping()
            : this("dbo")
        {
        }

        public MeetingVisualiserChartItemMapping(string schema)
        {
            ToTable("MeetingVisualiserChartItems", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TaskId).HasColumnName(@"TaskId").HasColumnType("int").IsRequired();
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.X).HasColumnName(@"X").HasColumnType("int").IsRequired();
            Property(x => x.Y).HasColumnName(@"Y").HasColumnType("int").IsRequired();
            Property(x => x.Width).HasColumnName(@"Width").HasColumnType("int").IsRequired();
            Property(x => x.Height).HasColumnName(@"Height").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
