// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // CustomFieldValues
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class CustomFieldValueMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CustomFieldValue>
    {
        public CustomFieldValueMapping()
            : this("dbo")
        {
        }

        public CustomFieldValueMapping(string schema)
        {
            ToTable("CustomFieldValues", schema);
            HasKey(x => new { x.CustomFieldId, x.EntityId });

            Property(x => x.CustomFieldId).HasColumnName(@"CustomFieldId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EntityId).HasColumnName(@"EntityId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("nvarchar(max)").IsOptional();

            // Foreign keys
            HasRequired(a => a.CustomField).WithMany(b => b.CustomFieldValues).HasForeignKey(c => c.CustomFieldId); // FK_dbo.CustomFieldValues_dbo.CustomFields_CustomFieldId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
