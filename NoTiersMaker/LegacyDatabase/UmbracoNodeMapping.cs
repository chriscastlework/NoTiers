// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // umbracoNode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class UmbracoNodeMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UmbracoNode>
    {
        public UmbracoNodeMapping()
            : this("dbo")
        {
        }

        public UmbracoNodeMapping(string schema)
        {
            ToTable("umbracoNode", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Trashed).HasColumnName(@"trashed").HasColumnType("bit").IsRequired();
            Property(x => x.ParentId).HasColumnName(@"parentID").HasColumnType("int").IsRequired();
            Property(x => x.NodeUser).HasColumnName(@"nodeUser").HasColumnType("int").IsOptional();
            Property(x => x.Level).HasColumnName(@"level").HasColumnType("int").IsRequired();
            Property(x => x.Path).HasColumnName(@"path").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.SortOrder).HasColumnName(@"sortOrder").HasColumnType("int").IsRequired();
            Property(x => x.UniqueId).HasColumnName(@"uniqueID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Text).HasColumnName(@"text").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.NodeObjectType).HasColumnName(@"nodeObjectType").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.CreateDate).HasColumnName(@"createDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.UmbracoNode_ParentId).WithMany(b => b.UmbracoNodes_ParentId).HasForeignKey(c => c.ParentId).WillCascadeOnDelete(false); // FK_umbracoNode_umbracoNode_id
            HasMany(t => t.ParentContentTypeId).WithMany(t => t.ChildContentType).Map(m =>
            {
                m.ToTable("cmsContentType2ContentType", "dbo");
                m.MapLeftKey("childContentTypeId");
                m.MapRightKey("parentContentTypeId");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
