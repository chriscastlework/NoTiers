// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // cmsTask
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class CmsTaskMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CmsTask>
    {
        public CmsTaskMapping()
            : this("dbo")
        {
        }

        public CmsTaskMapping(string schema)
        {
            ToTable("cmsTask", schema);
            HasKey(x => x.Id);

            Property(x => x.Closed).HasColumnName(@"closed").HasColumnType("bit").IsRequired();
            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TaskTypeId).HasColumnName(@"taskTypeId").HasColumnType("int").IsRequired();
            Property(x => x.NodeId).HasColumnName(@"nodeId").HasColumnType("int").IsRequired();
            Property(x => x.ParentUserId).HasColumnName(@"parentUserId").HasColumnType("int").IsRequired();
            Property(x => x.UserId).HasColumnName(@"userId").HasColumnType("int").IsRequired();
            Property(x => x.DateTime).HasColumnName(@"DateTime").HasColumnType("datetime").IsRequired();
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);

            // Foreign keys
            HasRequired(a => a.CmsTaskType).WithMany(b => b.CmsTasks).HasForeignKey(c => c.TaskTypeId).WillCascadeOnDelete(false); // FK_cmsTask_cmsTaskType_id
            HasRequired(a => a.ParentUser).WithMany(b => b.ParentUser).HasForeignKey(c => c.ParentUserId).WillCascadeOnDelete(false); // FK_cmsTask_umbracoUser
            HasRequired(a => a.UmbracoNode).WithMany(b => b.CmsTasks).HasForeignKey(c => c.NodeId).WillCascadeOnDelete(false); // FK_cmsTask_umbracoNode_id
            HasRequired(a => a.User).WithMany(b => b.User).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_cmsTask_umbracoUser1
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
