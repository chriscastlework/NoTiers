// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // DealSteps
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class DealStepMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DealStep>
    {
        public DealStepMapping()
            : this("dbo")
        {
        }

        public DealStepMapping(string schema)
        {
            ToTable("DealSteps", schema);
            HasKey(x => new { x.DealId, x.StepId });

            Property(x => x.DealId).HasColumnName(@"DealId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StepId).HasColumnName(@"StepId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ActionValue).HasColumnName(@"ActionValue").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ActionIdValue).HasColumnName(@"ActionIdValue").HasColumnType("int").IsOptional();
            Property(x => x.CompletedDateTime).HasColumnName(@"CompletedDateTime").HasColumnType("datetime2").IsOptional();
            Property(x => x.Hidden).HasColumnName(@"Hidden").HasColumnType("bit").IsRequired();
            Property(x => x.Completed).HasColumnName(@"Completed").HasColumnType("bit").IsRequired();
            Property(x => x.ReminderTaskId).HasColumnName(@"ReminderTaskId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ReminderTask).WithMany(b => b.DealSteps).HasForeignKey(c => c.ReminderTaskId).WillCascadeOnDelete(false); // FK_dbo.DealSteps_dbo.ReminderTasks_ReminderTaskId
            HasRequired(a => a.Deal).WithMany(b => b.DealSteps).HasForeignKey(c => c.DealId); // FK_dbo.DealSteps_dbo.Deals_DealId
            HasRequired(a => a.Step).WithMany(b => b.DealSteps).HasForeignKey(c => c.StepId); // FK_dbo.DealSteps_dbo.Steps_StepId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
