// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // StandardRelationships
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class StandardRelationshipMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StandardRelationship>
    {
        public StandardRelationshipMapping()
            : this("dbo")
        {
        }

        public StandardRelationshipMapping(string schema)
        {
            ToTable("StandardRelationships", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StandardObjectDefinitionId).HasColumnName(@"StandardObjectDefinition_Id").HasColumnType("bigint").IsOptional();
            Property(x => x.OrganisationId).HasColumnName(@"Organisation_Id").HasColumnType("int").IsOptional();
            Property(x => x.ContactId).HasColumnName(@"Contact_Id").HasColumnType("int").IsOptional();
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CustomObjectRowId).HasColumnName(@"CustomObjectRow_Id").HasColumnType("bigint").IsOptional();
            Property(x => x.StandardObjectRelationshipDefintionId).HasColumnName(@"StandardObjectRelationshipDefintion_Id").HasColumnType("bigint").IsOptional();
            Property(x => x.ClassName).HasColumnName(@"ClassName").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DealId).HasColumnName(@"Deal_Id").HasColumnType("int").IsOptional();
            Property(x => x.TaskId).HasColumnName(@"Task_Id").HasColumnType("int").IsOptional();
            Property(x => x.AccountId).HasColumnName(@"Account_Id").HasColumnType("int").IsOptional();
            Property(x => x.Key).HasColumnName(@"Key").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DependantValue).HasColumnName(@"DependantValue").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CustomObjectId).HasColumnName(@"CustomObject_Id").HasColumnType("bigint").IsOptional();

            // Foreign keys
            HasOptional(a => a.Account).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.AccountId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.Accounts_Account_Id
            HasOptional(a => a.Contact).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.ContactId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.Contacts_Contact_Id
            HasOptional(a => a.CustomObject).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.CustomObjectId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.CustomObjects_CustomObject_Id
            HasOptional(a => a.CustomObjectRow).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.CustomObjectRowId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.CustomTableRows_CustomTableRow_Id
            HasOptional(a => a.Deal).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.DealId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.Deals_Deal_Id
            HasOptional(a => a.Organisation).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.OrganisationId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.Organisations_Organisation_Id
            HasOptional(a => a.StandardObjectDefinition).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.StandardObjectDefinitionId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.StandardObjectDefinitions_Definition_Id
            HasOptional(a => a.StandardObjectRelationshipDefintion).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.StandardObjectRelationshipDefintionId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.StandardTableRelationshipDefintions_StandardTableRelationshipDefintion_Id
            HasOptional(a => a.Task).WithMany(b => b.StandardRelationships).HasForeignKey(c => c.TaskId).WillCascadeOnDelete(false); // FK_dbo.StandardRelationships_dbo.Tasks_Task_Id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
