// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // Scopes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class IdenServ_ScopeMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IdenServ_Scope>
    {
        public IdenServ_ScopeMapping()
            : this("IdenServ")
        {
        }

        public IdenServ_ScopeMapping(string schema)
        {
            ToTable("Scopes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.DisplayName).HasColumnName(@"DisplayName").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.Required).HasColumnName(@"Required").HasColumnType("bit").IsRequired();
            Property(x => x.Emphasize).HasColumnName(@"Emphasize").HasColumnType("bit").IsRequired();
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
            Property(x => x.IncludeAllClaimsForUser).HasColumnName(@"IncludeAllClaimsForUser").HasColumnType("bit").IsRequired();
            Property(x => x.ClaimsRule).HasColumnName(@"ClaimsRule").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.ShowInDiscoveryDocument).HasColumnName(@"ShowInDiscoveryDocument").HasColumnType("bit").IsRequired();
            Property(x => x.AllowUnrestrictedIntrospection).HasColumnName(@"AllowUnrestrictedIntrospection").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
