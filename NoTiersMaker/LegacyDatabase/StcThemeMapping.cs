// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // StcThemes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class StcThemeMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StcTheme>
    {
        public StcThemeMapping()
            : this("dbo")
        {
        }

        public StcThemeMapping(string schema)
        {
            ToTable("StcThemes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NavBarBackgroundColour).HasColumnName(@"NavBarBackgroundColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Created).HasColumnName(@"Created").HasColumnType("datetime2").IsOptional();
            Property(x => x.CreatedUserId).HasColumnName(@"CreatedUserId").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime2").IsOptional();
            Property(x => x.LastUpdatedUserId).HasColumnName(@"LastUpdatedUserId").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.LogoImage).HasColumnName(@"LogoImage").HasColumnType("varbinary").IsOptional();
            Property(x => x.CarotColour).HasColumnName(@"CarotColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.HighlightedColour).HasColumnName(@"HighlightedColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.TitleTextColour).HasColumnName(@"TitleTextColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ExternalReference).HasColumnName(@"ExternalReference").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DefaultTheme).HasColumnName(@"DefaultTheme").HasColumnType("bit").IsRequired();
            Property(x => x.IsOrganisationTheme).HasColumnName(@"IsOrganisationTheme").HasColumnType("bit").IsRequired();
            Property(x => x.SmallLogoImageByteArray144144).HasColumnName(@"SmallLogoImageByteArray144144").HasColumnType("varbinary").IsOptional();
            Property(x => x.SmallLogoImageByteArray114114).HasColumnName(@"SmallLogoImageByteArray114114").HasColumnType("varbinary").IsOptional();
            Property(x => x.SmallLogoImageByteArray7272).HasColumnName(@"SmallLogoImageByteArray7272").HasColumnType("varbinary").IsOptional();
            Property(x => x.SmallLogoImageByteArray5757).HasColumnName(@"SmallLogoImageByteArray5757").HasColumnType("varbinary").IsOptional();
            Property(x => x.BoxHeaderBackgroundColour).HasColumnName(@"BoxHeaderBackgroundColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.BoxHeaderTextColour).HasColumnName(@"BoxHeaderTextColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectedNavStateTextColour).HasColumnName(@"SelectedNavStateTextColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DropDownListBackgoundHover).HasColumnName(@"DropDownListBackgoundHover").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DropDownListTextHoverColour).HasColumnName(@"DropDownListTextHoverColour").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.MobileLogoImageByteArray).HasColumnName(@"MobileLogoImageByteArray").HasColumnType("varbinary").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
