// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // ExternalIntegrationFieldMappings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class ExternalIntegrationFieldMappingMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExternalIntegrationFieldMapping>
    {
        public ExternalIntegrationFieldMappingMapping()
            : this("dbo")
        {
        }

        public ExternalIntegrationFieldMappingMapping(string schema)
        {
            ToTable("ExternalIntegrationFieldMappings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ExternalIntegrationTypeMappingId).HasColumnName(@"ExternalIntegrationTypeMappingId").HasColumnType("int").IsRequired();
            Property(x => x.ExternalField).HasColumnName(@"ExternalField").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.VrField).HasColumnName(@"VrField").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DirectionalSyncUpRule).HasColumnName(@"DirectionalSyncUpRule").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DirectionalSyncDownRule).HasColumnName(@"DirectionalSyncDownRule").HasColumnType("nvarchar(max)").IsOptional();

            // Foreign keys
            HasRequired(a => a.ExternalIntegrationTypeMapping).WithMany(b => b.ExternalIntegrationFieldMappings).HasForeignKey(c => c.ExternalIntegrationTypeMappingId); // FK_dbo.ExternalIntegrationFieldMappings_dbo.ExternalIntegrationTypeMappings_ExternalIntegrationTypeMappingId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
