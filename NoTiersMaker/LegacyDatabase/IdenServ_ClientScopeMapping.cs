// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CustomLogic.LegacyDatabase
{

    // ClientScopes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.27.0.0")]
    public partial class IdenServ_ClientScopeMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IdenServ_ClientScope>
    {
        public IdenServ_ClientScopeMapping()
            : this("IdenServ")
        {
        }

        public IdenServ_ClientScopeMapping(string schema)
        {
            ToTable("ClientScopes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Scope).HasColumnName(@"Scope").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.ClientId).HasColumnName(@"Client_Id").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.IdenServ_Client).WithMany(b => b.IdenServ_ClientScopes).HasForeignKey(c => c.ClientId).WillCascadeOnDelete(false); // FK_IdenServ.ClientScopes_IdenServ.Clients_Client_Id
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
