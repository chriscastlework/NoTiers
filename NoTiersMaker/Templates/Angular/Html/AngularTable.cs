// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CustomLogic.Templates.Angular.Html
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using CustomLogic.Templates.Angular;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class AngularTable : AngularTableBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n<script>\r\n    (function () {\r\n\r\n        var app = angular.module(\"app\", [\"ngTab" +
                    "le\"]);\r\n\r\n        // ");
            
            #line 13 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(" Service\r\n        angular.module(\'app\').factory(\'");
            
            #line 14 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("ApiService\', ");
            
            #line 14 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("ApiService);\r\n        ");
            
            #line 15 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("ApiService.$inject = [\'$http\'];\r\n        function ");
            
            #line 16 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("ApiService($http) {\r\n\r\n            return {\r\n                Get: get,\r\n         " +
                    "       Post: post,\r\n                Put: put,\r\n                Delete: deleteApi" +
                    "\r\n            };\r\n\r\n            function get(id) {\r\n                return $http" +
                    ".get(\'/api/");
            
            #line 26 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("/\' + id)\r\n                   .then(get");
            
            #line 27 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete)\r\n                   .catch(get");
            
            #line 28 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail);\r\n\r\n                function get");
            
            #line 30 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete(response) {\r\n                    return response.data.Data;\r\n           " +
                    "     }\r\n\r\n                function get");
            
            #line 34 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail(error) {\r\n                    debugger;\r\n                }\r\n            };\r\n" +
                    "\r\n            function post(data) {\r\n                return $http.post(\'/api/");
            
            #line 40 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("/\', data)\r\n                   .then(post");
            
            #line 41 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete)\r\n                   .catch(post");
            
            #line 42 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail);\r\n\r\n                function post");
            
            #line 44 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete(response) {\r\n                    return response.data;\r\n                " +
                    "}\r\n\r\n                function post");
            
            #line 48 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail(error) {\r\n                    debugger;\r\n                }\r\n            };\r\n" +
                    "\r\n            function put(id, data) {\r\n                return $http.put(\'/api/");
            
            #line 54 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("/\' + id, data)\r\n                   .then(put");
            
            #line 55 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete)\r\n                   .catch(put");
            
            #line 56 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail);\r\n\r\n                function put");
            
            #line 58 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete(response) {\r\n                    return response.data.Data;\r\n           " +
                    "     }\r\n\r\n                function put");
            
            #line 62 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail(error) {\r\n                    debugger;\r\n                }\r\n            };\r\n" +
                    "\r\n            function deleteApi(id) {\r\n                return $http.delete(\'/ap" +
                    "i/");
            
            #line 68 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("/\' + id)\r\n                   .then(delete");
            
            #line 69 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete)\r\n                   .catch(delete");
            
            #line 70 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail);\r\n\r\n                function delete");
            
            #line 72 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Complete(response) {\r\n                    return response.data.Data;\r\n           " +
                    "     }\r\n\r\n                function delete");
            
            #line 76 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Fail(error) {\r\n                    debugger;\r\n                }\r\n            };\r\n" +
                    "        };\r\n        // ");
            
            #line 81 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(" Service End\r\n\r\n        // ");
            
            #line 83 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(" Table Controller\r\n        angular.module(\'app\').controller(\'");
            
            #line 84 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Controller\', ");
            
            #line 84 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Controller);\r\n        ");
            
            #line 85 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Controller.$inject = [\"NgTableParams\", \"");
            
            #line 85 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("ApiService\"];\r\n        function ");
            
            #line 86 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Controller(NgTableParams, ");
            
            #line 86 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(@"ApiService) {
            var vm = this;
            vm.tableParams = new NgTableParams({
                page: 1,            // show first page
                count: 10           // count per page
            }, {
                getData: function (params) {
                    var postParams = {};
                    postParams.page = params.page();
                    postParams.count = params.count();
                    postParams.total = params.total();
                    postParams.filter = params.filter();
                    postParams.sorting = params.sorting();
                    postParams.group = params.group();
                    return ");
            
            #line 100 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(@"ApiService.Post(postParams) 
                        .then(function (response) {
                            params.total(response.Count);
                            return response.Data;
                        });
                }
            });
        };
        // ");
            
            #line 108 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(" Table Controller End\r\n    })();\r\n</script>\r\n\r\n\r\n<div ng-app=\"app\">\r\n\r\n <div ng-c" +
                    "ontroller=\"");
            
            #line 115 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write("Controller as ");
            
            #line 115 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_ViewModelName()));
            
            #line default
            #line hidden
            this.Write("\">\r\n\r\n        <h2 class=\"page-header\">");
            
            #line 117 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_TableName()));
            
            #line default
            #line hidden
            this.Write(" Table</h2>\r\n\r\n        <table ng-table=\"");
            
            #line 119 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_model.TT_ViewModelName()));
            
            #line default
            #line hidden
            this.Write(".tableParams\" class=\"table table-bordered table-striped table-condensed\">\r\n      " +
                    "      <tr ng-repeat=\"row in $data track by row.Id\">\r\n\r\n");
            
            #line 122 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"

if(_model.ColumnInfo!=null)
foreach(var item in _model.ColumnInfo)
{
if(item.IncludeInView)
{

            
            #line default
            #line hidden
            this.Write(" <td data-title=\"\'");
            
            #line 129 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.ColumnNameInView));
            
            #line default
            #line hidden
            this.Write("\'\" \r\n");
            
            #line 130 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NgHelp.GetTableSort(item)));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 131 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NgHelp.GetTableFilter(item)));
            
            #line default
            #line hidden
            this.Write(" >\r\n{{row.");
            
            #line 132 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.ColumnNameInView));
            
            #line default
            #line hidden
            this.Write("}}\r\n</td>\r\n");
            
            #line 134 "C:\Users\ChrisCastle\Documents\Visual Studio 2015\Projects\CSharpeToolSet\NoTiersMaker\Templates\Angular\Html\AngularTable.tt"

}
}

            
            #line default
            #line hidden
            this.Write(@"            </tr>
        </table>
    </div>
 </div>



<!-- Trigger the modal with a button -->
<button type=""button"" class=""btn btn-info btn-lg"" data-toggle=""modal"" data-target=""#myModal"">Open Modal</button>

<!-- Modal -->
<div id=""myModal"" class=""modal fade"" role=""dialog"">
  <div class=""modal-dialog"">

    <!-- Modal content-->
    <div class=""modal-content"">
      <div class=""modal-header"">
        <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
        <h4 class=""modal-title"">Modal Header</h4>
      </div>
      <div class=""modal-body"">
        <p>Some text in the modal.</p>
      </div>
      <div class=""modal-footer"">
        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
      </div>
    </div>

  </div>
</div>

");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class AngularTableBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
