<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CustomLogic.Templates.Angular" #>

<script>
    (function () {

        var app = angular.module("app", ["ngTable"]);

        // <#=_model.TT_TableName()#> Service
        angular.module('app').factory('<#=_model.TT_TableName()#>ApiService', <#=_model.TT_TableName()#>ApiService);
        <#=_model.TT_TableName()#>ApiService.$inject = ['$http'];
        function <#=_model.TT_TableName()#>ApiService($http) {

            return {
                Get: get,
                Post: post,
                Put: put,
                Delete: deleteApi
            };

            function get(id) {
                return $http.get('/api/<#=_model.TT_TableName()#>/' + id)
                   .then(get<#=_model.TT_TableName()#>Complete)
                   .catch(get<#=_model.TT_TableName()#>Fail);

                function get<#=_model.TT_TableName()#>Complete(response) {
                    return response.data.Data;
                }

                function get<#=_model.TT_TableName()#>Fail(error) {
                    debugger;
                }
            };

            function post(data) {
                return $http.post('/api/<#=_model.TT_TableName()#>/', data)
                   .then(post<#=_model.TT_TableName()#>Complete)
                   .catch(post<#=_model.TT_TableName()#>Fail);

                function post<#=_model.TT_TableName()#>Complete(response) {
                    return response.data;
                }

                function post<#=_model.TT_TableName()#>Fail(error) {
                    debugger;
                }
            };

            function put(id, data) {
                return $http.put('/api/<#=_model.TT_TableName()#>/' + id, data)
                   .then(put<#=_model.TT_TableName()#>Complete)
                   .catch(put<#=_model.TT_TableName()#>Fail);

                function put<#=_model.TT_TableName()#>Complete(response) {
                    return response.data.Data;
                }

                function put<#=_model.TT_TableName()#>Fail(error) {
                    debugger;
                }
            };

            function deleteApi(id) {
                return $http.delete('/api/<#=_model.TT_TableName()#>/' + id)
                   .then(delete<#=_model.TT_TableName()#>Complete)
                   .catch(delete<#=_model.TT_TableName()#>Fail);

                function delete<#=_model.TT_TableName()#>Complete(response) {
                    return response.data.Data;
                }

                function delete<#=_model.TT_TableName()#>Fail(error) {
                    debugger;
                }
            };
        };
        // <#=_model.TT_TableName()#> Service End

        // <#=_model.TT_TableName()#> Table Controller
        angular.module('app').controller('<#=_model.TT_TableName()#>Controller', <#=_model.TT_TableName()#>Controller);
        <#=_model.TT_TableName()#>Controller.$inject = ["NgTableParams", "<#=_model.TT_TableName()#>ApiService"];
        function <#=_model.TT_TableName()#>Controller(NgTableParams, <#=_model.TT_TableName()#>ApiService) {
            var vm = this;
            vm.tableParams = new NgTableParams({
                page: 1,            // show first page
                count: 10           // count per page
            }, {
                getData: function (params) {
                    var postParams = {};
                    postParams.page = params.page();
                    postParams.count = params.count();
                    postParams.total = params.total();
                    postParams.filter = params.filter();
                    postParams.sorting = params.sorting();
                    postParams.group = params.group();
                    return <#=_model.TT_TableName()#>ApiService.Post(postParams) 
                        .then(function (response) {
                            params.total(response.Count);
                            return response.Data;
                        });
                }
            });
        };
        // <#=_model.TT_TableName()#> Table Controller End
    })();
</script>


<div ng-app="app">

 <div ng-controller="<#=_model.TT_TableName()#>Controller as <#=_model.TT_ViewModelName()#>">

        <h2 class="page-header"><#=_model.TT_TableName()#> Table</h2>

        <table ng-table="<#=_model.TT_ViewModelName()#>.tableParams" class="table table-bordered table-striped table-condensed">
            <tr ng-repeat="row in $data track by row.Id">

<#
if(_model.ColumnInfo!=null)
foreach(var item in _model.ColumnInfo)
{
if(item.IncludeInView)
{
#>
 <td data-title="'<#=item.ColumnNameInView#>'" 
<#=NgHelp.GetTableSort(item)#> 
<#=NgHelp.GetTableFilter(item)#> >
{{row.<#=item.ColumnNameInView#>}}
</td>
<#
}
}
#>
            </tr>
        </table>
    </div>
 </div>



<!-- Trigger the modal with a button -->
<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Modal Header</h4>
      </div>
      <div class="modal-body">
        <p>Some text in the modal.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>

